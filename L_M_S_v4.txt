#include<iostream>
#include<fstream>
#include<string.h>

using namespace std;

void Admin_menu();
void Book_menu();
void Issuer_menu();
void Underline();

class User
{
private:
    char user_password[8];
public:
    char user_name[8];
    bool Login();
    void Prompt();
    void Manager();
};

bool User::Login()
{
    system("cls");
    User U1;
    bool verify;
    cout << "*Please login to proceed further!\n*Default User Name and Password is 'admin' and 'admin'.";
    Underline();
    cout << "\nEnter User Name: ";
    cin.getline(U1.user_name, 8);
    cout << "Enter User Password: ";
    cin.getline(U1.user_password, 8);
    ifstream file("user.dat", ios::in | ios::binary);
    if(!file.is_open())
    {
        cout << "Error: File 'user.dat' not found!\n";
        system("pause");
    }
    else
    {
        User U2;
        while(file.read((char*)&U2, sizeof(U2)))
        {
            if(strcmp(U2.user_name, U1.user_name) == 0 && strcmp(U2.user_password, U1.user_password) == 0)
            {
                cout << "\nAccess Granted!\n";
                file.close();
                verify = true;
            }
            else
            {
                cout << "\nAccess Denied!\n";
                file.close();
                verify = false;
            }
        }
    }
    system("pause");
    return verify;
}

void User::Prompt()
{
    system("cls");
    char choice;
    cout << "*Maximum length of User Name & Password is 8 characters!";
    Underline();
    cout << "\nDo you wish to change your User Name and Password? (Y/N): ";
    cin >> choice;
    if(choice == 'Y' || choice == 'y')
    {
        Manager();
    }
    else
    {
        Admin_menu();
    }
}

void User::Manager()
{
again:
    system("cls");
    User U1;
    cout << "Enter current User Name: ";
    cin >> U1.user_name;
    cout << "Enter current User Password: ";
    cin >> U1.user_password;
    ifstream in_file("user.dat", ios::in | ios::binary);
    if(!in_file.is_open())
    {
        cout << "Error: File 'user.dat' not found!\n";
        system("pause");
    }
    else
    {
        User U2, U3;
        while(in_file.read((char*)&U2, sizeof(U2)))
        {
            if(strcmp(U2.user_name, U1.user_name) == 0 && strcmp(U2.user_password, U1.user_password) == 0)
            {
                system("cls");
                cout << "Enter new User Name: ";
                cin >> U3.user_name;
                cout << "Enter new User Password: ";
                cin >> U3.user_password;
                ofstream out_file("user.dat", ios::out | ios::trunc | ios::binary);
                out_file.write((char*)&U3, sizeof(U3));
                out_file.close();
                cout << "\nYour login details has been successfully updated!\n";
                system("pause");
            }
            else
            {
                cout << "\nError: Incorrect User Name or Password!\n";
                system("pause");
                goto again;
            }
        }
    }
    in_file.close();
    Admin_menu();
}

class Books
{
public:
    char book_catergory[15], book_name[80], book_author[35], book_publisher[25];
    int book_quantity, book_price;
    void Add_book();
    void Show_db();
    void Modify_db();
    void Clear_db();
};

void Books::Add_book()
{
again:
    system("cls");
    Books B;
    char category[15];
    int quantity;
    cout << "Enter book category(Academic, Fictional, Biography): ";
    cin >> category;
    if(strcmp(category, "Academic") == 0)
    {
        ofstream file("academic.dat", ios::out | ios::app | ios::binary);
        if(!file.is_open())
        {
            cout << "\nError: File 'academic.dat' not found!\n";
            system("pause");
        }
        else
        {
            cout << "Enter total book quantity: ";
            cin >> quantity;
            for(int i = 0; i < quantity; i++)
            {
                cin.ignore();
                cout << "\nBook Name: ";
                cin.getline(B.book_name, 80);
                cout << "Book Publisher: ";
                cin.getline(B.book_publisher, 25);
                cout << "Book Author: ";
                cin.getline(B.book_author, 35);
                cout << "Book Quantity: ";
                cin >> B.book_quantity;
                cout << "Book Price: ";
                cin >> B.book_price;
                file.write((char*)&B, sizeof(B));
            }
        }
        file.close();
    }
    else if(strcmp(category, "Fictional") == 0)
    {
        ofstream file("fictional.dat", ios::out | ios::app | ios::binary);
        if(!file.is_open())
        {
            cout << "\nError: File 'fictional.dat' not found!\n";
            system("pause");
        }
        else
        {
            cout << "Enter total book quantity: ";
            cin >> quantity;
            for(int i = 0; i < quantity; i++)
            {
                cin.ignore();
                cout << "\nBook Name: ";
                cin.getline(B.book_name, 80);
                cout << "Book Publisher: ";
                cin.getline(B.book_publisher, 25);
                cout << "Book Author: ";
                cin.getline(B.book_author, 35);
                cout << "Book Quantity: ";
                cin >> B.book_quantity;
                cout << "Book Price: ";
                cin >> B.book_price;
                file.write((char*)&B, sizeof(B));
            }
        }
        file.close();
    }
    else if(strcmp(category, "Biography") == 0)
    {
        ofstream file("biography.dat", ios::out | ios::app | ios::binary);
        if(!file.is_open())
        {
            cout << "\nError: File 'biography.dat' not found!\n";
            system("pause");
        }
        else
        {
            cout << "Enter total book quantity: ";
            cin >> quantity;
            for(int i = 0; i < quantity; i++)
            {
                cin.ignore();
                cout << "\nBook Name: ";
                cin.getline(B.book_name, 80);
                cout << "Book Publisher: ";
                cin.getline(B.book_publisher, 25);
                cout << "Book Author: ";
                cin.getline(B.book_author, 35);
                cout << "Book Quantity: ";
                cin >> B.book_quantity;
                cout << "Book Price: ";
                cin >> B.book_price;
                file.write((char*)&B, sizeof(B));
            }
        }
        file.close();
    }
    else
    {
        cout << "\nError: No such category exists!\n";
        system("pause");
        goto again;
    }
    cout << "\n";
    system("pause");
    Book_menu();
}

void Books::Show_db()
{
again:
    system("cls");
    Books B;
    char category[15];
    cout << "Enter book category(Academic, Fictional, Biography): ";
    cin >> category;
    if(strcmp(category, "Academic") == 0)
    {
        ifstream file("academic.dat", ios::in | ios:: ate | ios::binary);
        if(!file.is_open())
        {
            cout << "\nError: File 'academic.dat' not found!";
        }
        else
        {
            int pos = file.tellg();
            if(pos == 0)
            {
                cout << "\nThis category is empty!";
            }
            else
            {
                file.seekg(ios::beg);
                cout << "\nFound following data...";
                while(file.read((char*)&B, sizeof(B)))
                {
                    cout << "\n\n\tBook Name: " << B.book_name;
                    cout << "\n\tBook Publisher: " << B.book_publisher;
                    cout << "\n\tBook Author: " << B.book_author;
                    cout << "\n\tBook Quantity: " << B.book_quantity;
                    cout << "\n\tBook Price: " << B.book_price;
                }
            }
        }
        file.close();
    }
    else if(strcmp(category, "Fictional") == 0)
    {
        ifstream file("fictional.dat", ios::in | ios::ate | ios::binary);
        if(!file.is_open())
        {
            cout << "\nError: File 'fictional.dat' not found!";
        }
        else
        {
            int pos = file.tellg();
            if(pos == 0)
            {
                cout << "\nThis category is empty!";
            }
            else
            {
                file.seekg(ios::beg);
                cout << "\nFound following data...";
                while(file.read((char*)&B, sizeof(B)))
                {
                    cout << "\n\n\tBook Name: " << B.book_name;
                    cout << "\n\tBook Publisher: " << B.book_publisher;
                    cout << "\n\tBook Author: " << B.book_author;
                    cout << "\n\tBook Quantity: " << B.book_quantity;
                    cout << "\n\tBook Price: " << B.book_price;
                }
            }
        }
        file.close();
    }
    else if(strcmp(category, "Biography") == 0)
    {
        ifstream file("biography.dat", ios::in | ios::ate | ios::binary);
        if(!file.is_open())
        {
            cout << "\nError: File 'biography.dat' not found!";
        }
        else
        {
            int pos = file.tellg();
            if(pos == 0)
            {
                cout << "\nThis category is empty!";
            }
            else
            {
                file.seekg(ios::beg);
                cout << "\nFound following books...";
                while(file.read((char*)&B, sizeof(B)))
                {
                    cout << "\n\n\tBook Name: " << B.book_name;
                    cout << "\n\tBook Publisher: " << B.book_publisher;
                    cout << "\n\tBook Author: " << B.book_author;
                    cout << "\n\tBook Quantity: " << B.book_quantity;
                    cout << "\n\tBook Price: " << B.book_price;
                }
            }
        }
        file.close();
    }
    else
    {
        cout << "\nError: No such category exists!\n";
        system("pause");
        goto again;
    }
    cout << "\n";
    system("pause");
    Book_menu();
}

void Books::Modify_db()
{
again:
    system("cls");
    bool c_empty = false, found;
    char category[15];
    cout << "Enter book category(Academic, Fictional, Biography): ";
    cin >> category;
    if(strcmp(category, "Academic") == 0)
    {
        Books B0;
        cin.ignore();
        cout << "Enter Book Name: ";
        cin.getline(B0.book_name, 80);
        cout << "Enter Book Author: ";
        cin.getline(B0.book_author, 35);
        fstream file("academic.dat", ios::out | ios::in | ios::ate | ios::binary);
        if(!file.is_open())
        {
            cout << "\nError: File 'academic.dat' not found!";
        }
        else
        {
            int pos = file.tellg();
            if(pos == 0)
            {
                cout << "\nThis category is empty!";
                c_empty = true;
            }
            else
            {
                int pos;
                Books B1, B2;
                file.seekg(ios::beg);
                while(file.read((char*)&B1, sizeof(B1)))
                {
                    if((strcmp(B0.book_name, B1.book_name) == 0) && (strcmp(B0.book_author, B1.book_author) == 0))
                    {
                        found = true;
                        cout << "\n*Original data-";
                        cout << "\n\tBook Name: " << B1.book_name;
                        cout << "\n\tBook Publisher: " << B1.book_publisher;
                        cout << "\n\tBook Author: " << B1.book_author;
                        cout << "\n\tBook Quantity: " << B1.book_quantity;
                        cout << "\n\tBook Price: " << B1.book_price;
                        cout << "\n\n*Edit data-";
                        cout << "\n\tBook Name: ";
                        cin.getline(B2.book_name, 80);
                        cout << "\tBook Publisher: ";
                        cin.getline(B2.book_publisher, 25);
                        cout << "\tBook Author: ";
                        cin.getline(B2.book_author, 35);
                        cout << "\tBook Quantity: ";
                        cin >> B2.book_quantity;
                        cout << "\tBook Price: ";
                        cin >> B2.book_price;
                        pos = file.tellg();
                        file.seekg(pos - sizeof(B2));
                        file.write((char*)&B2, sizeof(B2));
                    }
                }
            }
        }
        file.close();
    }
    else if(strcmp(category, "Fictional") == 0)
    {
        Books B0;
        cin.ignore();
        cout << "Enter Book Name: ";
        cin.getline(B0.book_name, 80);
        cout << "Enter Book Author: ";
        cin.getline(B0.book_author, 35);
        fstream file("fictional.dat", ios::out | ios::in | ios::ate | ios::binary);
        if(!file.is_open())
        {
            cout << "\nError: File 'fictional.dat' not found!";
        }
        else
        {
            int pos = file.tellg();
            if(pos == 0)
            {
                cout << "\nThis category is empty!";
                c_empty = true;
            }
            else
            {
                int pos;
                Books B1, B2;
                file.seekg(ios::beg);
                while(file.read((char*)&B1, sizeof(B1)))
                {
                    if((strcmp(B0.book_name, B1.book_name)) == 0 && (strcmp(B0.book_author, B1.book_author) == 0))
                    {
                        found = true;
                        cout << "\n*Original data-";
                        cout << "\n\tBook Name: " << B1.book_name;
                        cout << "\n\tBook Publisher: " << B1.book_publisher;
                        cout << "\n\tBook Author: " << B1.book_author;
                        cout << "\n\tBook Quantity: " << B1.book_quantity;
                        cout << "\n\tBook Price: " << B1.book_price;
                        cout << "\n\n*Edit data-";
                        cout << "\n\tBook Name: ";
                        cin.getline(B2.book_name, 80);
                        cout << "\tBook Publisher: ";
                        cin.getline(B2.book_publisher, 25);
                        cout << "\tBook Author: ";
                        cin.getline(B2.book_author, 35);
                        cout << "\tBook Quantity: ";
                        cin >> B2.book_quantity;
                        cout << "\tBook Price: ";
                        cin >> B2.book_price;
                        pos = file.tellg();
                        file.seekg(pos - sizeof(B2));
                        file.write((char*)&B2, sizeof(B2));
                    }
                }
            }
            file.close();
        }
    }
    else if(strcmp(category, "Biography") == 0)
    {
        Books B0;
        cin.ignore();
        cout << "Enter Book Name: ";
        cin.getline(B0.book_name, 80);
        cout << "Enter Book Author: ";
        cin.getline(B0.book_author, 35);
        fstream file("biography.dat", ios::out | ios::in | ios::ate | ios::binary);
        if(!file.is_open())
        {
            cout << "\nError: File 'biography.dat' not found!";
        }
        else
        {
            int pos = file.tellg();
            if(pos == 0)
            {
                cout << "\nThis category is empty!";
                c_empty = true;
            }
            else
            {
                int pos;
                Books B1, B2;
                file.seekg(ios::beg);
                while(file.read((char*)&B1, sizeof(B1)))
                {
                    if((strcmp(B0.book_name, B1.book_name) == 0) && (strcmp(B0.book_author, B1.book_author) == 0))
                    {
                        found = true;
                        cout << "\n*Original data-";
                        cout << "\n\tBook Name: " << B1.book_name;
                        cout << "\n\tBook Publisher: " << B1.book_publisher;
                        cout << "\n\tBook Author: " << B1.book_author;
                        cout << "\n\tBook Quantity: " << B1.book_quantity;
                        cout << "\n\tBook Price: " << B1.book_price;
                        cout << "\n\n*Edit data-";
                        cout << "\n\tBook Name: ";
                        cin.getline(B2.book_name, 80);
                        cout << "\tBook Publisher: ";
                        cin.getline(B2.book_publisher, 25);
                        cout << "\tBook Author: ";
                        cin.getline(B2.book_author, 35);
                        cout << "\tBook Quantity: ";
                        cin >> B2.book_quantity;
                        cout << "\tBook Price: ";
                        cin >> B2.book_price;
                        pos = file.tellg();
                        file.seekg(pos - sizeof(B2));
                        file.write((char*)&B2, sizeof(B2));
                    }
                }
            }
        }
        file.close();
    }
    else
    {
        cout << "\nError: No such category exists!\n";
        system("pause");
        goto again;
    }
    if(c_empty == false && found == false)
    {
        cout << "\nNo such book found!";
    }
    cout << "\n";
    system("pause");
    Book_menu();
}

void Books::Clear_db()
{
again:
    system("cls");
    char category[15];
    cout << "Enter book category(Academic, Fictional, Biography): ";
    cin >> category;
    if(strcmp(category, "Academic") == 0)
    {
        ofstream file("academic.dat", ios::out | ios:: trunc | ios::binary);
        if(!file.is_open())
        {
            cout << "Error: File 'academic.dat' not found!\n";
        }
        else
        {
            cout << "\nTask successfully completed!";
        }
        file.close();
    }
    else if(strcmp(category, "Fictional") == 0)
    {
        ofstream file("fictional.dat", ios::out | ios:: trunc | ios::binary);
        if(!file.is_open())
        {
            cout << "Error: File 'fictional.dat' not found!\n";
        }
        else
        {
            cout << "\nTask successfully completed!";
        }
        file.close();
    }
    else if(strcmp(category, "Biography") == 0)
    {
        ofstream file("Biography.dat", ios::out | ios:: trunc | ios::binary);
        if(!file.is_open())
        {
            cout << "Error: File 'biography.dat' not found!\n";
        }
        else
        {
            cout << "\nTask successfully completed!";
        }
        file.close();
    }
    else
    {
        cout << "Error: No such category exists!\n";
        system("pause");
        goto again;
    }
    cout << "\n";
    system("pause");
    Book_menu();
}

void Underline()
{
    cout << "\n";
    for(int i = 0; i < 125; i++)
    {
        cout << "\xFE";
    }
    cout << "\n";
}

void Admin_menu()
{
again:
    int option;
    system("cls");
    cout << "*Administrator's Menu";
    Underline();
    cout << "\n1. Manage Database of Books\n2. Manage Database of Issuers\n3. Quit(Log Out)\n";
    cout << "\n*Enter option number: ";
    cin >> option;
    switch(option)
    {
    case 1:
        Book_menu();
        break;
    case 2:
        Issuer_menu();
        break;
    case 3:
        break;
    default:
        cout << "\nError: Wrong option number!\n";
        system("pause");
        goto again;
    }
}

void Book_menu()
{
again:
    Books B;
    system("cls");
    int option;
    cout << "*Manage your Database of Books from here";
    Underline();
    cout << "\n1. Add Books\n2. Show Books\n3. Modify Books\n4. Clear Database of Books(Use with care!)\n5. Administrator's Menu\n";
    cout << "\n*Enter option number: ";
    cin >>  option;
    switch(option)
    {
    case 1:
        B.Add_book();
        break;
    case 2:
        B.Show_db();
        break;
    case 3:
        B.Modify_db();
        break;
    case 4:
        B.Clear_db();
        break;
    case 5:
        Admin_menu();
        break;
    default:
        cout << "\nError: Wrong option number!\n";
        system("pause");
        goto again;
    }
}

void Issuer_menu()
{
}

int main()
{
again:
    bool access;
    User U;
    access = U.Login();
    if(access)
    {
        U.Prompt();
    }
    else
    {
        goto again;
    }
    return EXIT_SUCCESS;
}
